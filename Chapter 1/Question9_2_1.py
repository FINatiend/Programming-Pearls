#书上的解法
#书上的题目写得非常反人类，总而言之就是让我们实现以下功能
#第一次访问数组（该数组之前为空，或者是一个含任意整数的数组）
# 某个item时，将其初始化为0，再次访问这个item时
#不对其操作，避免重复操作浪费资源
#提问：为什么不直接将整个数组直接初始化为0，因为我们需要初始化的
#item很少，直接将整个数组初始化需要浪费很多资源。
#同时解决Question9_2.py中提到的问题
import numpy as np
#模拟题目中的数组
data=list(np.random.randint(0,100,size=20))
fromx=['x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x']
to=['x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x','x']
top=0
#模拟访问数组item的次序
index=[5,0,4,1,3,8,15,6,13,5,4,6,15]
for i in index:
    fromx[i]=top
    to[top]=i
    data[i]=0
    top=top+1
